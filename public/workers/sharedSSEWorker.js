var g={version:2};var u="firehose",s=[],r,i;self.onconnect=o=>{let e=o.ports[0];s.push(e),e.onmessage=t=>{let{type:c,payload:n}=t.data;c==="connect"?(n.accessToken!==i&&(S(s,"Received SSE connect request with updated token"),i&&r&&d(r,s),n.accessToken&&(i=n.accessToken,r=l(n.url,i,s))),r&&e.postMessage({type:"debug",payload:"SSE connected and listening for events"})):c==="shutdown"&&r&&(S(s,"Shutting down sharedSSEWorker"),d(r,s),r=void 0,s.forEach(a=>a.close()),s.length=0,self.close())},e.start(),e.onclose=()=>{let t=s.indexOf(e);t!==-1&&s.splice(t,1)},e.postMessage({type:"version",payload:g.version})};function l(o,e,t){let c=new URL(o);c.searchParams.set("topic",u),c.searchParams.set("token",e);let n=new EventSource(c);return n.onmessage=a=>{p(t,{type:"sse",payload:JSON.parse(a.data)})},n.onerror=a=>{S(t,"SSE Error, closing event listening"),console.error("SSE Error:",a),n.close()},n}function d(o,e){o.close(),S(e,"Stopped listening for Server Sent Events")}function p(o,e){o.forEach(t=>{t.postMessage(e)})}function S(o,e){p(o,{type:"debug",payload:e})}
