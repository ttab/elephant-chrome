var E="firehose",s=[],r,i;self.onconnect=n=>{let e=n.ports[0];s.push(e),e.onmessage=t=>{let{type:c,payload:o}=t.data;c==="connect"?(o.accessToken!==i&&(S(s,"Received SSE connect request with updated token"),i&&r&&g(r,s),o.accessToken&&(i=o.accessToken,r=p(o.url,i,s))),r&&e.postMessage({type:"debug",payload:"SSE connected and listening for events"})):c==="shutdown"&&r&&(S(s,"Shutting down sharedSSEWorker"),g(r,s),r=void 0,s.forEach(a=>a.close()),s.length=0,self.close())},e.start(),e.onclose=()=>{let t=s.indexOf(e);t!==-1&&s.splice(t,1)},e.postMessage({type:"version",payload:1})};function p(n,e,t){let c=new URL(n);c.searchParams.set("topic",E),c.searchParams.set("token",e);let o=new EventSource(c);return o.onmessage=a=>{d(t,{type:"sse",payload:JSON.parse(a.data)})},o.onerror=a=>{S(t,"SSE Error, closing event listening"),console.error("SSE Error:",a),o.close()},o}function g(n,e){n.close(),S(e,"Stopped listening for Server Sent Events")}function d(n,e){n.forEach(t=>{t.postMessage(e)})}function S(n,e){d(n,{type:"debug",payload:e})}
